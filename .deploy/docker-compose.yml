services:
  postgres:
    image: postgres:17.5
    restart: always
    container_name: local_pgdb
    ports:
      - ${POSTGRES_PORT}
    env_file:
      - .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/

  redis:
    image: redis:8.0
    restart: always
    ports:
      - ${REDIS_PORT}
    env_file:
      - .env
    volumes:
      - ./data/redis/data:/root/redis
      - ./data/redis/redis.conf:/usr/local/etc/redis/redis.conf

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    ports:
      - ${PGADMIN_PORT}
    env_file:
      - .env
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin

  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    env_file:
      - .env
    volumes:
      - ./data/keycloak:/opt/keycloak/data/import
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7080/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: [ "start-dev", "--http-port", "7080", "--https-port", "7443", "--import-realm" ]
    ports:
      - ${KC_HTTP_PORT}
      - ${KC_HTTPS_PORT}
    networks:
      - keycloak_network
    depends_on:
      - postgres

  keycloak_db:
    image: postgres:17.5
    restart: always
    ports:
      - ${KC_DB_PORT}
    environment:
      - POSTGRES_DB=${KC_DB}
      - POSTGRES_USER=${KC_DB_USERNAME}
      - POSTGRES_PASSWORD=${KC_DB_PASSWORD}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
    networks:
      - keycloak_network

networks:
  keycloak_network:
    driver: bridge
